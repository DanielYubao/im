<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deloitte.system.mapper.sys.GroupMapper">
    
    <resultMap type="Group" id="GroupResult">
        <result property="id"    column="id"    />
        <result property="groupName"    column="group_name"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>
	
	<sql id="selectGroupVo">
        select id, group_name, status, create_by, create_time, update_by, update_time, remark from sys_groups
    </sql>
	
    <select id="selectGroupList" parameterType="Group" resultMap="GroupResult">
        <include refid="selectGroupVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="groupName != null  and groupName != '' "> and group_name = #{groupName}</if>
             <if test="status != null  and status != '' "> and status = #{status}</if>
             <if test="createBy != null  and createBy != '' "> and create_by = #{createBy}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
             <if test="updateBy != null  and updateBy != '' "> and update_by = #{updateBy}</if>
             <if test="updateTime != null "> and update_time = #{updateTime}</if>
             <if test="remark != null  and remark != '' "> and remark = #{remark}</if>
         </where>
    </select>
    
    <select id="selectGroupById" parameterType="Long" resultMap="GroupResult">
        <include refid="selectGroupVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertGroup" parameterType="Group">
        insert into sys_groups
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null  ">id,</if>
			<if test="groupName != null  and groupName != ''  ">group_name,</if>
			<if test="status != null  and status != ''  ">status,</if>
			<if test="createBy != null  and createBy != ''  ">create_by,</if>
			<if test="createTime != null  ">create_time,</if>
			<if test="updateBy != null  and updateBy != ''  ">update_by,</if>
			<if test="updateTime != null  ">update_time,</if>
			<if test="remark != null  and remark != ''  ">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null  ">#{id},</if>
			<if test="groupName != null  and groupName != ''  ">#{groupName},</if>
			<if test="status != null  and status != ''  ">#{status},</if>
			<if test="createBy != null  and createBy != ''  ">#{createBy},</if>
			<if test="createTime != null  ">#{createTime},</if>
			<if test="updateBy != null  and updateBy != ''  ">#{updateBy},</if>
			<if test="updateTime != null  ">#{updateTime},</if>
			<if test="remark != null  and remark != ''  ">#{remark},</if>
         </trim>
    </insert>
	 
    <update id="updateGroup" parameterType="Group">
        update sys_groups
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupName != null  and groupName != ''  ">group_name = #{groupName},</if>
            <if test="status != null  and status != ''  ">status = #{status},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteGroupById" parameterType="Long">
        delete from sys_groups where id = #{id}
    </delete>
	
    <delete id="deleteGroupByIds" parameterType="Long">
        delete from sys_groups where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="checkGroupNameUnique" resultType="int">
        select count(1) from sys_groups where group_name = #{groupName}
    </select>

    <select id="selectGroupByUserId" resultMap="GroupResult">
    SELECT * FROM `sys_groups` a inner join user_group_rel b on a.id = b.group_id
    INNER JOIN  sys_users c on c.id = b.user_id where b.user_id = #{userId}
    </select>
    
</mapper>