<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deloitte.system.mapper.customer.ChannelInfoMapper">
    <resultMap id="BaseResultMap" type="com.deloitte.system.model.customer.ChannelInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="channel_name" property="channelName" jdbcType="VARCHAR"/>
        <result column="contact" property="contact" jdbcType="VARCHAR"/>
        <result column="contact_info" property="contactInfo" jdbcType="VARCHAR"/>
        <result column="new_amount_rate" property="newAmountRate" jdbcType="DOUBLE"/>
        <result column="renew_amount_rate" property="renewAmountRate" jdbcType="DOUBLE"/>
        <result column="payment_type" property="paymentType" jdbcType="VARCHAR"/>
        <result column="channel_bank_code" property="channelBankCode" jdbcType="VARCHAR"/>
        <result column="channel_bank_name" property="channelBankName" jdbcType="VARCHAR"/>
        <result column="payment_code" property="paymentCode" jdbcType="VARCHAR"/>
        <result column="audit_role" property="auditRole" jdbcType="VARCHAR"/>
        <result column="audit_id" property="auditId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="disable_flag" property="disableFlag" jdbcType="INTEGER"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    c.id, channel_name, contact, contact_info, new_amount_rate, renew_amount_rate, payment_type,
    channel_bank_code, channel_bank_name, payment_code, audit_role, audit_id, c.status, c.create_by,
    c.create_time, c.update_by, c.update_time, c.disable_flag, c.delete_flag, u.name create_name from channel_info c
    left join sys_users u on c.create_by = u.id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        where c.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from channel_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.deloitte.system.model.customer.ChannelInfo">
    insert into channel_info (id, channel_name, contact, 
      contact_info, new_amount_rate, renew_amount_rate, 
      payment_type, channel_bank_code, channel_bank_name, 
      payment_code, audit_role, audit_id, status, create_by,
      create_time, update_by, update_time, 
      disable_flag, delete_flag)
    values (#{id,jdbcType=BIGINT}, #{channelName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{contactInfo,jdbcType=VARCHAR}, #{newAmountRate,jdbcType=DOUBLE}, #{renewAmountRate,jdbcType=DOUBLE}, 
      #{paymentType,jdbcType=VARCHAR}, #{channelBankCode,jdbcType=VARCHAR}, #{channelBankName,jdbcType=VARCHAR}, 
      #{paymentCode,jdbcType=VARCHAR}, #{auditRole,jdbcType=VARCHAR},#{auditId,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR},
      #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
      #{disableFlag,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.deloitte.system.model.customer.ChannelInfo">
        insert into channel_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="channelName != null">
                channel_name,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="contactInfo != null">
                contact_info,
            </if>
            <if test="newAmountRate != null">
                new_amount_rate,
            </if>
            <if test="renewAmountRate != null">
                renew_amount_rate,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="channelBankCode != null">
                channel_bank_code,
            </if>
            <if test="channelBankName != null">
                channel_bank_name,
            </if>
            <if test="paymentCode != null">
                payment_code,
            </if>
            <if test="auditRole != null">
                audit_role,
            </if>
            <if test="auditId != null">
                audit_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="disableFlag != null">
                disable_flag,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="channelName != null">
                #{channelName,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contactInfo != null">
                #{contactInfo,jdbcType=VARCHAR},
            </if>
            <if test="newAmountRate != null">
                #{newAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="renewAmountRate != null">
                #{renewAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="channelBankCode != null">
                #{channelBankCode,jdbcType=VARCHAR},
            </if>
            <if test="channelBankName != null">
                #{channelBankName,jdbcType=VARCHAR},
            </if>
            <if test="paymentCode != null">
                #{paymentCode,jdbcType=VARCHAR},
            </if>
            <if test="auditRole != null">
                #{auditRole,jdbcType=VARCHAR},
            </if>
            <if test="auditId != null">
                #{auditId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="disableFlag != null">
                #{disableFlag,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.deloitte.system.model.customer.ChannelInfo">
        update channel_info
        <set>
            <if test="channelName != null">
                channel_name = #{channelName,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contactInfo != null">
                contact_info = #{contactInfo,jdbcType=VARCHAR},
            </if>
            <if test="newAmountRate != null">
                new_amount_rate = #{newAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="renewAmountRate != null">
                renew_amount_rate = #{renewAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="channelBankCode != null">
                channel_bank_code = #{channelBankCode,jdbcType=VARCHAR},
            </if>
            <if test="channelBankName != null">
                channel_bank_name = #{channelBankName,jdbcType=VARCHAR},
            </if>
            <if test="paymentCode != null">
                payment_code = #{paymentCode,jdbcType=VARCHAR},
            </if>
            <if test="auditRole != null">
                audit_role = #{auditRole,jdbcType=VARCHAR},
            </if>
            <if test="auditId != null">
                audit_id = #{auditId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="disableFlag != null">
                disable_flag = #{disableFlag,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.deloitte.system.model.customer.ChannelInfo">
    update channel_info
    set channel_name = #{channelName,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contact_info = #{contactInfo,jdbcType=VARCHAR},
      new_amount_rate = #{newAmountRate,jdbcType=DOUBLE},
      renew_amount_rate = #{renewAmountRate,jdbcType=DOUBLE},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      channel_bank_code = #{channelBankCode,jdbcType=VARCHAR},
      channel_bank_name = #{channelBankName,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      audit_role = #{auditRole,jdbcType=VARCHAR},
      audit_id = #{auditId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      disable_flag = #{disableFlag,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="saveChannelExcel" parameterType="Long">
    insert into channel_info(channel_name, contact, contact_info, new_amount_rate, renew_amount_rate,
        payment_type, channel_bank_code, channel_bank_name, payment_code, create_by, create_time, update_by)
    select channel_name, contact, contact_info,
        if(LENGTH(trim(new_amount_rate))=0,0,new_amount_rate) new_amount_rate,
        if(LENGTH(trim(renew_amount_rate))=0,0,renew_amount_rate) renew_amount_rate,
       payment_type, channel_bank_code, channel_bank_name, payment_code, create_by, create_time, create_by update_by
    from channel_info_excel where create_by=#{userId,jdbcType=BIGINT} and validate_flag = 1
  </select>

    <select id="selectList" parameterType="com.deloitte.system.model.customer.ChannelInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        <where>
            and c.delete_flag = 0
            <if test="channelName != null and channelName != '' ">and channel_name like concat('%',
                #{channelName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="contact != null and contact != '' ">and contact like concat('%', #{contact,jdbcType=VARCHAR},
                '%')
            </if>
            <if test="contactInfo != null and contactInfo != '' ">and contact_info like
                concat('%', #{contactInfo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paymentType != null and paymentType != ''">
                and payment_type = #{paymentType,jdbcType=VARCHAR}
            </if>
            <if test="channelBankCode != null and channelBankCode != '' ">and channel_bank_code like concat('%',
                #{channelBankCode,jdbcType=VARCHAR}, '%')
            </if>
            <if test="createBy != null and createBy != '' ">and c.create_by = #{createBy,jdbcType=BIGINT}</if>
            <if test="status != null and status != '' ">and c.status = #{status,jdbcType=VARCHAR}</if>
            <if test="auditRole != null and auditRole != '' ">and c.audit_role = #{auditRole,jdbcType=VARCHAR}</if>
            <if test="startDate != null and startDate != ''">and c.create_time &gt;= #{startDate,jdbcType=VARCHAR}</if>
            <if test="endDate != null and endDate != ''">and c.create_time &lt;= #{endDate,jdbcType=VARCHAR}</if>
        </where>
        order by c.create_time desc
    </select>

    <delete id="deleteChannelInfo" parameterType="Long">
        update channel_info set delete_flag = 1, update_time = now(), update_by = #{userId,jdbcType=BIGINT} where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="updateStatus">
        update channel_info set status = #{status}, update_time=now() where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


</mapper>