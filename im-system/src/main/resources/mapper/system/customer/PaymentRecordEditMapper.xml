<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deloitte.system.mapper.customer.PaymentRecordEditMapper">
    <resultMap id="BaseResultMap" type="com.deloitte.system.model.customer.PaymentRecordEdit">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="customer_code" property="customerCode" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="BIGINT"/>
        <result column="customer_type" property="customerType" jdbcType="VARCHAR"/>
        <result column="payment_type" property="paymentType" jdbcType="VARCHAR"/>
        <result column="new_amount" property="newAmount" jdbcType="DOUBLE"/>
        <result column="new_payment_amount" property="newPaymentAmount" jdbcType="DOUBLE"/>
        <result column="renew_amount" property="renewAmount" jdbcType="DOUBLE"/>
        <result column="renew_payment_amount" property="renewPaymentAmount" jdbcType="DOUBLE"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="audit_role" property="auditRole" jdbcType="VARCHAR"/>
        <result column="change_type" property="changeType" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="disable_flag" property="disableFlag" jdbcType="INTEGER"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    p.id, customer_code,customer_id, customer_type, payment_type, new_amount, new_payment_amount, renew_amount, renew_payment_amount,
    p.remark, p.audit_role, p.change_type, p.create_by, p.create_time, p.update_by, p.update_time,
    p.disable_flag, p.delete_flag, u.name create_name
    from payment_record_edit p left join sys_users u on p.create_by = u.id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        where p.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from payment_record_edit
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.deloitte.system.model.customer.PaymentRecordEdit">
    insert into payment_record_edit (id, customer_code, customer_id,customer_type,
        payment_type,new_amount, new_payment_amount, renew_amount,
      renew_payment_amount, remark, audit_role,
      change_type, create_by, create_time,
      update_by, update_time, disable_flag,
      delete_flag)
    values (#{id,jdbcType=BIGINT}, #{customerCode,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR},
        #{customerType,jdbcType=VARCHAR},#{paymentType,jdbcType=VARCHAR},
      #{newAmount,jdbcType=DOUBLE}, #{newPaymentAmount,jdbcType=DOUBLE}, #{renewAmount,jdbcType=DOUBLE},
      #{renewPaymentAmount,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR}, #{auditRole,jdbcType=VARCHAR},
      #{changeType,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{disableFlag,jdbcType=INTEGER},
      #{deleteFlag,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.deloitte.system.model.customer.PaymentRecordEdit">
        insert into payment_record_edit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="customerCode != null">
                customer_code,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="customerType != null">
                customer_type,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="newAmount != null">
                new_amount,
            </if>
            <if test="newPaymentAmount != null">
                new_payment_amount,
            </if>
            <if test="renewAmount != null">
                renew_amount,
            </if>
            <if test="renewPaymentAmount != null">
                renew_payment_amount,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="auditRole != null">
                audit_role,
            </if>
            <if test="changeType != null">
                change_type,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="disableFlag != null">
                disable_flag,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="customerCode != null">
                #{customerCode,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="customerType != null">
                #{customerType,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="newAmount != null">
                #{newAmount,jdbcType=DOUBLE},
            </if>
            <if test="newPaymentAmount != null">
                #{newPaymentAmount,jdbcType=DOUBLE},
            </if>
            <if test="renewAmount != null">
                #{renewAmount,jdbcType=DOUBLE},
            </if>
            <if test="renewPaymentAmount != null">
                #{renewPaymentAmount,jdbcType=DOUBLE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="auditRole != null">
                #{auditRole,jdbcType=VARCHAR},
            </if>
            <if test="changeType != null">
                #{changeType,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="disableFlag != null">
                #{disableFlag,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.deloitte.system.model.customer.PaymentRecordEdit">
        update payment_record_edit
        <set>
            <if test="customerCode != null">
                customer_code = #{customerCode,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="customerType != null">
                customer_type = #{customerType,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="newAmount != null">
                new_amount = #{newAmount,jdbcType=DOUBLE},
            </if>
            <if test="newPaymentAmount != null">
                new_payment_amount = #{newPaymentAmount,jdbcType=DOUBLE},
            </if>
            <if test="renewAmount != null">
                renew_amount = #{renewAmount,jdbcType=DOUBLE},
            </if>
            <if test="renewPaymentAmount != null">
                renew_payment_amount = #{renewPaymentAmount,jdbcType=DOUBLE},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="auditRole != null">
                audit_role = #{auditRole,jdbcType=VARCHAR},
            </if>
            <if test="changeType != null">
                change_type = #{changeType,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="disableFlag != null">
                disable_flag = #{disableFlag,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.deloitte.system.model.customer.PaymentRecordEdit">
    update payment_record_edit
    set customer_code = #{customerCode,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=VARCHAR},
      customer_type = #{customerType,jdbcType=VARCHAR},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      new_amount = #{newAmount,jdbcType=DOUBLE},
      new_payment_amount = #{newPaymentAmount,jdbcType=DOUBLE},
      renew_amount = #{renewAmount,jdbcType=DOUBLE},
      renew_payment_amount = #{renewPaymentAmount,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      audit_role = #{auditRole,jdbcType=VARCHAR},
      change_type = #{changeType,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      disable_flag = #{disableFlag,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectList" parameterType="com.deloitte.system.model.customer.PaymentRecordEdit"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        <where>
            and p.delete_flag = 0
            <if test="customerCode != null and customerCode != '' ">and p.customer_code like concat('%',
                #{customerCode,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paymentType != null and paymentType != '' ">and p.payment_type = #{paymentType,jdbcType=VARCHAR}
            </if>
            <if test="createBy != null and createBy != '' ">and p.create_by = #{createBy,jdbcType=BIGINT}</if>
            <if test="changeType != null and changeType != '' ">and p.change_type = #{changeType,jdbcType=VARCHAR}</if>
            <if test="auditRole != null and auditRole != '' ">and p.audit_role = #{auditRole,jdbcType=VARCHAR}</if>
        </where>
        order by update_time desc
    </select>

    <delete id="deletePaymentRecordEdit" parameterType="Long">
        delete from payment_record_edit where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>