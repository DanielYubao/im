<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.deloitte.system.mapper.customer.CustomerInfoMapper">
    <resultMap id="BaseResultMap" type="com.deloitte.system.model.customer.CustomerInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="customer_code" property="customerCode" jdbcType="VARCHAR"/>
        <result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
        <result column="contact" property="contact" jdbcType="VARCHAR"/>
        <result column="contact_info" property="contactInfo" jdbcType="VARCHAR"/>
        <result column="new_amount_rate" property="newAmountRate" jdbcType="DOUBLE"/>
        <result column="renew_amount_rate" property="renewAmountRate" jdbcType="DOUBLE"/>
        <result column="payment_type" property="paymentType" jdbcType="VARCHAR"/>
        <result column="customer_bank_code" property="customerBankCode" jdbcType="VARCHAR"/>
        <result column="customer_bank_name" property="customerBankName" jdbcType="VARCHAR"/>
        <result column="payment_code" property="paymentCode" jdbcType="VARCHAR"/>
        <result column="audit_role" property="auditRole" jdbcType="VARCHAR"/>
        <result column="audit_id" property="auditId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="disable_flag" property="disableFlag" jdbcType="INTEGER"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="create_name" property="createName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    c.id, CAST(AES_DECRYPT(UNHEX(customer_code),'1')as char) customer_code, customer_name, contact, CAST(AES_DECRYPT(UNHEX(contact_info),'1')as char) contact_info, new_amount_rate, renew_amount_rate,
    payment_type, customer_bank_code, customer_bank_name, payment_code, audit_role, audit_id, c.status, c.create_by, u.name create_name,
    c.create_time, c.update_by, c.update_time, c.disable_flag, c.delete_flag  from customer_info c
    left join sys_users u on c.create_by = u.id
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        where c.id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    update customer_info set delete_flag = 1
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.deloitte.system.model.customer.CustomerInfo">
    insert into customer_info (id, customer_code, customer_name,
      contact, contact_info, new_amount_rate, renew_amount_rate,
      payment_type, customer_bank_code, customer_bank_name, payment_code,
      audit_role, audit_id, status, create_by, create_time, update_by,
      update_time, disable_flag, delete_flag
      )
    values (#{id,jdbcType=BIGINT}, HEX(AES_ENCRYPT(#{customerCode,jdbcType=VARCHAR},'1')), #{customerName,jdbcType=VARCHAR},
      #{contact,jdbcType=VARCHAR}, HEX(AES_ENCRYPT(#{contactInfo,jdbcType=VARCHAR},'1')), #{newAmountRate,jdbcType=DOUBLE},
      #{renewAmountRate,jdbcType=DOUBLE}, #{paymentType,jdbcType=VARCHAR}, #{customerBankCode,jdbcType=VARCHAR},
      #{customerBankName,jdbcType=VARCHAR}, #{paymentCode,jdbcType=VARCHAR},#{auditRole,jdbcType=VARCHAR},
      #{auditId,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{disableFlag,jdbcType=INTEGER}, #{deleteFlag,jdbcType=INTEGER}
      )
  </insert>

    <insert id="insertSelective" parameterType="com.deloitte.system.model.customer.CustomerInfo">
        insert into customer_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="customerCode != null and customerCode != ''">
                customer_code,
            </if>
            <if test="customerName != null and customerName != ''">
                customer_name,
            </if>
            <if test="contact != null and contact != ''">
                contact,
            </if>
            <if test="contactInfo != null and contactInfo != ''">
                contact_info,
            </if>
            <if test="newAmountRate != null">
                new_amount_rate,
            </if>
            <if test="renewAmountRate != null">
                renew_amount_rate,
            </if>
            <if test="paymentType != null and paymentType != ''">
                payment_type,
            </if>
            <if test="customerBankCode != null and customerBankCode != ''">
                customer_bank_code,
            </if>
            <if test="customerBankName != null and customerBankName != ''">
                customer_bank_name,
            </if>
            <if test="paymentCode != null and paymentCode != ''">
                payment_code,
            </if>
            <if test="auditRole != null">
                audit_role,
            </if>
            <if test="auditId != null">
                audit_id,
            </if>
            <if test="status != null and status != ''">
                status,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="disableFlag != null">
                disable_flag,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="customerCode != null and customerCode != ''">
                HEX(AES_ENCRYPT(#{customerCode,jdbcType=VARCHAR},'1')),
            </if>
            <if test="customerName != null and customerName != ''">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="contact != null and contact != ''">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contactInfo != null and contactInfo != ''">
                HEX(AES_ENCRYPT(#{contactInfo,jdbcType=VARCHAR},'1')),
            </if>
            <if test="newAmountRate != null">
                #{newAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="renewAmountRate != null">
                #{renewAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="paymentType != null and paymentType != ''">
                #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="customerBankCode != null and customerBankCode != ''">
                #{customerBankCode,jdbcType=VARCHAR},
            </if>
            <if test="customerBankName != null and customerBankName != ''">
                #{customerBankName,jdbcType=VARCHAR},
            </if>
            <if test="paymentCode != null and paymentCode != ''">
                #{paymentCode,jdbcType=VARCHAR},
            </if>
            <if test="auditRole != null">
                #{auditRole,jdbcType=VARCHAR},
            </if>
            <if test="auditId != null">
                #{auditId,jdbcType=BIGINT},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="disableFlag != null">
                #{disableFlag,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.deloitte.system.model.customer.CustomerInfo">
        update customer_info
        <set>
            <if test="customerCode != null and customerCode != ''">
                customer_code = HEX(AES_ENCRYPT(#{customerCode,jdbcType=VARCHAR},'1')),
            </if>
            <if test="customerName != null and customerName != ''">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="contact != null and contact != ''">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contactInfo != null and contactInfo != ''">
                contact_info = HEX(AES_ENCRYPT(#{contactInfo,jdbcType=VARCHAR},'1')),
            </if>
            <if test="newAmountRate != null">
                new_amount_rate = #{newAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="renewAmountRate != null">
                renew_amount_rate = #{renewAmountRate,jdbcType=DOUBLE},
            </if>
            <if test="paymentType != null and paymentType != ''">
                payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="customerBankCode != null and customerBankCode != ''">
                customer_bank_code = #{customerBankCode,jdbcType=VARCHAR},
            </if>
            <if test="customerBankName != null and customerBankName != ''">
                customer_bank_name = #{customerBankName,jdbcType=VARCHAR},
            </if>
            <if test="paymentCode != null and paymentCode != ''">
                payment_code = #{paymentCode,jdbcType=VARCHAR},
            </if>
            <if test="auditRole != null">
                audit_role = #{auditRole,jdbcType=VARCHAR},
            </if>
            <if test="auditId != null">
                audit_id = #{auditId,jdbcType=BIGINT},
            </if>
            <if test="status != null and status != ''">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="disableFlag != null">
                disable_flag = #{disableFlag,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.deloitte.system.model.customer.CustomerInfo">
    update customer_info
    set customer_code =  HEX(AES_ENCRYPT(#{customerCode,jdbcType=VARCHAR},'1')),
      customer_name = #{customerName,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contact_info = HEX(AES_ENCRYPT(#{contactInfo,jdbcType=VARCHAR},'1')),
      new_amount_rate = #{newAmountRate,jdbcType=DOUBLE},
      renew_amount_rate = #{renewAmountRate,jdbcType=DOUBLE},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      customer_bank_code = #{customerBankCode,jdbcType=VARCHAR},
      customer_bank_name = #{customerBankName,jdbcType=VARCHAR},
      payment_code = #{paymentCode,jdbcType=VARCHAR},
      audit_role = #{auditRole,jdbcType=VARCHAR},
      audit_id = #{auditId,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      disable_flag = #{disableFlag,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="saveCustomerExcel" parameterType="Long">
    insert into customer_info(customer_code, customer_name, contact, contact_info, new_amount_rate, renew_amount_rate,
        payment_type, customer_bank_code, customer_bank_name, payment_code, create_by, create_time, update_by)
    select customer_code, customer_name, contact, contact_info,
        if(LENGTH(trim(new_amount_rate))=0,0,new_amount_rate) new_amount_rate,
        if(LENGTH(trim(renew_amount_rate))=0,0,renew_amount_rate) renew_amount_rate,
       payment_type, customer_bank_code, customer_bank_name, payment_code, create_by, create_time, create_by
    from customer_info_excel where create_by=#{userId,jdbcType=BIGINT} and validate_flag = 1
  </select>

    <select id="selectList" parameterType="com.deloitte.system.model.customer.CustomerInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        <where>
            and c.delete_flag = 0
            <if test="customerCode != null and customerCode != '' ">and AES_DECRYPT(UNHEX(customer_code),'1') like
                concat('%', #{customerCode,jdbcType=VARCHAR}, '%')
            </if>
            <if test="customerName != null and customerName != '' ">and customer_name like concat('%',
                #{customerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="contact != null and contact != '' ">and contact like concat('%', #{contact,jdbcType=VARCHAR},
                '%')
            </if>
            <if test="contactInfo != null and contactInfo != '' ">and AES_DECRYPT(UNHEX(contact_info),'1') like
                concat('%', #{contactInfo,jdbcType=VARCHAR}, '%')
            </if>
            <if test="paymentType != null and paymentType != ''">
                and payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="customerBankCode != null and customerBankCode != '' ">and customer_bank_code like concat('%',
                #{customerBankCode,jdbcType=VARCHAR}, '%')
            </if>
            <if test="createBy != null and createBy != '' ">and c.create_by = #{createBy,jdbcType=BIGINT}</if>
            <if test="status != null and status != '' ">and c.status = #{status,jdbcType=VARCHAR}</if>
            <if test="startDate != null and startDate != ''">and c.create_time &gt;= #{startDate,jdbcType=VARCHAR}</if>
            <if test="endDate != null and endDate != ''">and c.create_time &lt;= #{endDate,jdbcType=VARCHAR}</if>
        </where>
        order by c.create_time desc
    </select>

    <select id="selectByCustomerCodeAndCreateBy" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        where AES_DECRYPT(UNHEX(customer_code),'1') = #{customerCode,jdbcType=VARCHAR} and c.create_by =
        #{createBy,jdbcType=BIGINT} and c.delete_flag = 0
    </select>

    <delete id="deleteCustomerInfo" parameterType="Long">
        update customer_info set delete_flag = 1, update_time = now(), update_by = #{userId,jdbcType=BIGINT} where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="updateStatus">
        update customer_info set status = #{status}, update_time=now() where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="modifyCreateBy">
        update customer_info set create_by= #{targetCreateBy}, update_time=now() where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="customerInfoData" parameterType="com.deloitte.system.model.customer.CustomerInfo" resultType="map">
        SELECT * FROM (
        SELECT COUNT(customer_code) customerAccountNum, COUNT(DISTINCT customer_name) customerNum from customer_info
        WHERE delete_flag =0
        <if test=" adminFlag == false and createBy != null and createBy != '' ">and create_by =
            #{createBy,jdbcType=BIGINT}
        </if>
        ) t
        LEFT JOIN (
        SELECT IFNULL(SUM(new_amount_total),0) newAmountTotal, IFNULL(SUM(renew_amount_total),0) renewAmountTotal from
        customer_info
        where delete_flag =0
        <if test="customerCode != null and customerCode != '' ">and AES_DECRYPT(UNHEX(customer_code),'1') like
            concat('%', #{customerCode,jdbcType=VARCHAR}, '%')
        </if>
        <if test="customerName != null and customerName != '' ">and customer_name like concat('%',
            #{customerName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="startDate != null and startDate != ''">and create_time &gt;= #{startDate,jdbcType=VARCHAR}</if>
        <if test="endDate != null and endDate != ''">and create_time &lt;= #{endDate,jdbcType=VARCHAR}</if>
        <if test="createBy != null and createBy != '' ">and create_by = #{createBy,jdbcType=BIGINT}</if>
        ) t1
        ON 1=1
    </select>


</mapper>